{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pradh\\\\Desktop\\\\devrev\\\\Bookztron-E-Commerce_Book_Store\\\\src\\\\Context\\\\orders-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useReducer, createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersContext = /*#__PURE__*/createContext();\n\nconst updateOrdersFunc = (state, action) => {\n  switch (action.type) {\n    case \"UPDATE_USER_ORDERS\":\n      {\n        return [...action.payload];\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst OrdersContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [userOrders, dispatchUserOrders] = useReducer(updateOrdersFunc, []);\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: {\n      userOrders,\n      dispatchUserOrders\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrdersContextProvider, \"qtgoBHPel+U3AcNvZj1JQ4sTI9s=\");\n\n_c = OrdersContextProvider;\n\nlet useOrders = () => {\n  _s2();\n\n  return useContext(OrdersContext);\n};\n\n_s2(useOrders, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { useOrders, OrdersContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersContextProvider\");","map":{"version":3,"sources":["C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/src/Context/orders-context.js"],"names":["useReducer","createContext","useContext","OrdersContext","updateOrdersFunc","state","action","type","payload","OrdersContextProvider","children","userOrders","dispatchUserOrders","useOrders"],"mappings":";;;;AAAA,SAASA,UAAT,EAAqBC,aAArB,EAAoCC,UAApC,QAAsD,OAAtD;;AAEA,MAAMC,aAAa,gBAAGF,aAAa,EAAnC;;AAEA,MAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACvC,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,oBAAL;AACI;AACI,eAAO,CAAC,GAAGD,MAAM,CAACE,OAAX,CAAP;AACH;;AACL;AAAU,aAAOH,KAAP;AANd;AAQH,CATD;;AAWA,MAAMI,qBAAqB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC1C,QAAM,CAACC,UAAD,EAAaC,kBAAb,IAAmCZ,UAAU,CAACI,gBAAD,EAAkB,EAAlB,CAAnD;AAEA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAD;AAAaC,MAAAA;AAAb,KAA/B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CARD;;GAAMD,qB;;KAAAA,qB;;AAUN,IAAII,SAAS,GAAG;AAAA;;AAAA,SAAMX,UAAU,CAACC,aAAD,CAAhB;AAAA,CAAhB;;IAAIU,S;;AAEJ,SAASA,SAAT,EAAoBJ,qBAApB","sourcesContent":["import { useReducer, createContext, useContext } from \"react\"\r\n\r\nconst OrdersContext = createContext()\r\n\r\nconst updateOrdersFunc = (state,action) => {\r\n    switch(action.type)\r\n    {\r\n        case \"UPDATE_USER_ORDERS\" : \r\n            {\r\n                return [...action.payload]\r\n            }\r\n        default : return state \r\n    }\r\n}\r\n\r\nconst OrdersContextProvider = ({children}) => {\r\n    const [userOrders, dispatchUserOrders] = useReducer(updateOrdersFunc,[])\r\n\r\n    return (\r\n        <OrdersContext.Provider value={{userOrders, dispatchUserOrders}}>\r\n            {children}\r\n        </OrdersContext.Provider>\r\n    )\r\n}\r\n\r\nlet useOrders = () => useContext(OrdersContext)\r\n\r\nexport { useOrders, OrdersContextProvider }"]},"metadata":{},"sourceType":"module"}