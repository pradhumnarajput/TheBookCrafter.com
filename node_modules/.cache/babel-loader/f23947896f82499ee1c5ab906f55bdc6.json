{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pradh\\\\Desktop\\\\devrev\\\\TheBookCrafter.com\\\\src\\\\Components\\\\Toast\\\\Toast.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from 'react';\nimport './Toast.css';\nimport { useToast } from \"../../Context/toast-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Toast(_ref) {\n  _s();\n\n  let {\n    position\n  } = _ref;\n  const {\n    toastList,\n    setToastList\n  } = useToast();\n  const deleteToast = useCallback(toastId => {\n    const newToastListItem = toastList.filter(toast => toast.id !== toastId);\n    setToastList(prevToastList => newToastListItem);\n  }, [toastList, setToastList]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (toastList.length) {\n        deleteToast(toastList[0].id);\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [toastList, deleteToast]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toasts-container ${position}`,\n    children: toastList.map((toast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `notification toast`,\n      style: {\n        backgroundColor: toast.backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toast-content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"toast-title\",\n          children: toast.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"toast-description\",\n          children: toast.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteToast(toast.id),\n        className: \"toast-close-btn\",\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Toast, \"tD8IaCilSbbPmj1d53Bs3BG2hrc=\", false, function () {\n  return [useToast];\n});\n\n_c = Toast;\nexport { Toast };\n\nvar _c;\n\n$RefreshReg$(_c, \"Toast\");","map":{"version":3,"sources":["C:/Users/pradh/Desktop/devrev/TheBookCrafter.com/src/Components/Toast/Toast.js"],"names":["useCallback","useEffect","useToast","Toast","position","toastList","setToastList","deleteToast","toastId","newToastListItem","filter","toast","id","prevToastList","interval","setInterval","length","clearInterval","map","index","backgroundColor","title","description"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,OAAO,aAAP;AACA,SAASC,QAAT,QAAyB,6BAAzB;;;AAEA,SAASC,KAAT,OACA;AAAA;;AAAA,MADe;AAAEC,IAAAA;AAAF,GACf;AACI,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BJ,QAAQ,EAA5C;AAEA,QAAMK,WAAW,GAAGP,WAAW,CAACQ,OAAO,IACvC;AACI,UAAMC,gBAAgB,GAAGJ,SAAS,CAACK,MAAV,CAAiBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAWJ,OAArC,CAAzB;AACAF,IAAAA,YAAY,CAACO,aAAa,IAAIJ,gBAAlB,CAAZ;AACH,GAJ8B,EAI7B,CAACJ,SAAD,EAAWC,YAAX,CAJ6B,CAA/B;AAMAL,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAC7B,UAAGV,SAAS,CAACW,MAAb,EACA;AACIT,QAAAA,WAAW,CAACF,SAAS,CAAC,CAAD,CAAT,CAAaO,EAAd,CAAX;AACH;AACJ,KAL2B,EAK1B,IAL0B,CAA5B;AAOA,WAAO,MAAK;AACRK,MAAAA,aAAa,CAACH,QAAD,CAAb;AACH,KAFD;AAIH,GAZQ,EAYP,CAACT,SAAD,EAAYE,WAAZ,CAZO,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAG,oBAAmBH,QAAS,EAA7C;AAAA,cAEQC,SAAS,CAACa,GAAV,CAAc,CAACP,KAAD,EAAQQ,KAAR,kBACV;AACK,MAAA,SAAS,EAAG,oBADjB;AAEK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAGT,KAAK,CAACS;AAAzB,OAFZ;AAAA,8BAII;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA,oBAA6BT,KAAK,CAACU;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA,oBAAkCV,KAAK,CAACW;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAQ,QAAA,OAAO,EAAE,MAAIf,WAAW,CAACI,KAAK,CAACC,EAAP,CAAhC;AAA4C,QAAA,SAAS,EAAC,iBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAAUO,KAAV;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA1CQhB,K;UAE+BD,Q;;;KAF/BC,K;AA4CT,SAASA,KAAT","sourcesContent":["import { useCallback, useEffect } from 'react'\r\nimport './Toast.css'\r\nimport { useToast } from \"../../Context/toast-context\"\r\n\r\nfunction Toast({ position })\r\n{\r\n    const { toastList, setToastList } = useToast()\r\n    \r\n    const deleteToast = useCallback(toastId =>\r\n    {\r\n        const newToastListItem = toastList.filter(toast => toast.id!==toastId)\r\n        setToastList(prevToastList => newToastListItem)\r\n    },[toastList,setToastList])\r\n\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            if(toastList.length)\r\n            {\r\n                deleteToast(toastList[0].id)\r\n            }\r\n        },3000);\r\n\r\n        return ()=> {\r\n            clearInterval(interval)\r\n        }\r\n        \r\n    },[toastList, deleteToast])\r\n\r\n    return(\r\n        <div className={`toasts-container ${position}`}>\r\n            {\r\n                toastList.map((toast, index) => (\r\n                    <div key={index}\r\n                         className={`notification toast`}\r\n                         style={{backgroundColor : toast.backgroundColor}}\r\n                    >\r\n                        <div className=\"toast-content-container\">\r\n                            <h3 className='toast-title'>{toast.title}</h3>\r\n                            <p className='toast-description'>{toast.description}</p>\r\n                        </div>\r\n                        <button onClick={()=>deleteToast(toast.id)} className=\"toast-close-btn\">X</button>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Toast };"]},"metadata":{},"sourceType":"module"}