{"ast":null,"code":"import _toConsumableArray from\"C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useContext,createContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var ToastContext=/*#__PURE__*/createContext();var ToastContextProvider=function ToastContextProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),toastList=_useState2[0],setToastList=_useState2[1];var toastProperties=null;var showToast=function showToast(typeOfToast,toastTitle,toastDescription){switch(typeOfToast){case\"success\":toastProperties={id:toastList.length+1,title:toastTitle,description:toastDescription,backgroundColor:'var(--onlinestatus-or-success)'};break;case\"error\":toastProperties={id:toastList.length+1,title:toastTitle,description:toastDescription,backgroundColor:'var(--red-color)'};break;case\"warning\":toastProperties={id:toastList.length+1,title:toastTitle,description:toastDescription,backgroundColor:'var(--awaystatus-or-warning)'};break;case\"info\":toastProperties={id:toastList.length+1,title:toastTitle,description:toastDescription,backgroundColor:'var(--sky-blue)'};break;default:toastProperties={};}setToastList(function(toastList){return[].concat(_toConsumableArray(toastList),[toastProperties]);});};return/*#__PURE__*/_jsx(ToastContext.Provider,{value:{toastList:toastList,setToastList:setToastList,showToast:showToast},children:children});};var useToast=function useToast(){return useContext(ToastContext);};export{ToastContextProvider,useToast};","map":{"version":3,"sources":["C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/src/Context/toast-context.js"],"names":["useState","useContext","createContext","ToastContext","ToastContextProvider","children","toastList","setToastList","toastProperties","showToast","typeOfToast","toastTitle","toastDescription","id","length","title","description","backgroundColor","useToast"],"mappings":"8SAAA,OAASA,QAAT,CAAmBC,UAAnB,CAA+BC,aAA/B,KAAoD,OAApD,C,2CAEA,GAAMC,CAAAA,YAAY,cAAGD,aAAa,EAAlC,CAEA,GAAIE,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACzC,cAAkCL,QAAQ,CAAC,EAAD,CAA1C,wCAAOM,SAAP,eAAkBC,YAAlB,eAEA,GAAIC,CAAAA,eAAe,CAAG,IAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,WAAD,CAAcC,UAAd,CAA0BC,gBAA1B,CAClB,CACE,OAAOF,WAAP,EAEE,IAAK,SAAL,CAAiBF,eAAe,CAAG,CACjCK,EAAE,CAAGP,SAAS,CAACQ,MAAV,CAAiB,CADW,CAEjCC,KAAK,CAAGJ,UAFyB,CAGjCK,WAAW,CAAGJ,gBAHmB,CAIjCK,eAAe,CAAG,gCAJe,CAAlB,CAMjB,MACA,IAAK,OAAL,CAAeT,eAAe,CAAG,CAC/BK,EAAE,CAAGP,SAAS,CAACQ,MAAV,CAAiB,CADS,CAE/BC,KAAK,CAAGJ,UAFuB,CAG/BK,WAAW,CAAGJ,gBAHiB,CAI/BK,eAAe,CAAG,kBAJa,CAAlB,CAMf,MACA,IAAK,SAAL,CAAiBT,eAAe,CAAG,CACjCK,EAAE,CAAGP,SAAS,CAACQ,MAAV,CAAiB,CADW,CAEjCC,KAAK,CAAGJ,UAFyB,CAGjCK,WAAW,CAAGJ,gBAHmB,CAIjCK,eAAe,CAAG,8BAJe,CAAlB,CAMjB,MACA,IAAK,MAAL,CAAcT,eAAe,CAAG,CAC9BK,EAAE,CAAGP,SAAS,CAACQ,MAAV,CAAiB,CADQ,CAE9BC,KAAK,CAAGJ,UAFsB,CAG9BK,WAAW,CAAGJ,gBAHgB,CAI9BK,eAAe,CAAG,iBAJY,CAAlB,CAMd,MACA,QAAUT,eAAe,CAAG,EAAlB,CA9BZ,CAiCAD,YAAY,CAAC,SAAAD,SAAS,qCAAMA,SAAN,GAAiBE,eAAjB,IAAV,CAAZ,CACD,CApCD,CAsCA,mBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAACF,SAAS,CAATA,SAAD,CAAYC,YAAY,CAAZA,YAAZ,CAA0BE,SAAS,CAATA,SAA1B,CAA9B,UACKJ,QADL,EADJ,CAKD,CAhDD,CAkDA,GAAIa,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMjB,CAAAA,UAAU,CAACE,YAAD,CAAhB,EAAf,CAEA,OAASC,oBAAT,CAA+Bc,QAA/B","sourcesContent":["import { useState, useContext, createContext } from 'react'\r\n\r\nconst ToastContext = createContext()\r\n\r\nlet ToastContextProvider = ({children}) => {\r\n  const [toastList, setToastList] = useState([])\r\n\r\n  let toastProperties = null;\r\n\r\n  const showToast = (typeOfToast, toastTitle, toastDescription) =>\r\n  {\r\n    switch(typeOfToast)\r\n    {\r\n      case \"success\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--onlinestatus-or-success)'\r\n      }\r\n      break;\r\n      case \"error\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--red-color)'\r\n      }\r\n      break;\r\n      case \"warning\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--awaystatus-or-warning)'\r\n      }\r\n      break;\r\n      case \"info\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--sky-blue)'\r\n      }\r\n      break;\r\n      default : toastProperties = {}\r\n    }\r\n    \r\n    setToastList(toastList=>[...toastList, toastProperties])\r\n  }\r\n\r\n  return (\r\n      <ToastContext.Provider value={{toastList, setToastList, showToast}}>\r\n          {children}\r\n      </ToastContext.Provider>\r\n  )\r\n}\r\n\r\nlet useToast = () => useContext(ToastContext)\r\n\r\nexport { ToastContextProvider, useToast }"]},"metadata":{},"sourceType":"module"}