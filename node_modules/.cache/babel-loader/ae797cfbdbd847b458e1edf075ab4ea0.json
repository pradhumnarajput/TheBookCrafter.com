{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pradh\\\\Desktop\\\\devrev\\\\TheBookCrafter.com\\\\src\\\\Context\\\\toast-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext();\n\nlet ToastContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [toastList, setToastList] = useState([]);\n  let toastProperties = null;\n\n  const showToast = (typeOfToast, toastTitle, toastDescription) => {\n    switch (typeOfToast) {\n      case \"success\":\n        toastProperties = {\n          id: toastList.length + 1,\n          title: toastTitle,\n          description: toastDescription,\n          backgroundColor: 'var(--onlinestatus-or-success)'\n        };\n        break;\n\n      case \"error\":\n        toastProperties = {\n          id: toastList.length + 1,\n          title: toastTitle,\n          description: toastDescription,\n          backgroundColor: 'var(--red-color)'\n        };\n        break;\n\n      case \"warning\":\n        toastProperties = {\n          id: toastList.length + 1,\n          title: toastTitle,\n          description: toastDescription,\n          backgroundColor: 'var(--awaystatus-or-warning)'\n        };\n        break;\n\n      case \"info\":\n        toastProperties = {\n          id: toastList.length + 1,\n          title: toastTitle,\n          description: toastDescription,\n          backgroundColor: 'var(--sky-blue)'\n        };\n        break;\n\n      default:\n        toastProperties = {};\n    }\n\n    setToastList(toastList => [...toastList, toastProperties]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      toastList,\n      setToastList,\n      showToast\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ToastContextProvider, \"vSFhh504yOhfpLDE/FqhPZg07EM=\");\n\n_c = ToastContextProvider;\n\nlet useToast = () => {\n  _s2();\n\n  return useContext(ToastContext);\n};\n\n_s2(useToast, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { ToastContextProvider, useToast };\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastContextProvider\");","map":{"version":3,"sources":["C:/Users/pradh/Desktop/devrev/TheBookCrafter.com/src/Context/toast-context.js"],"names":["useState","useContext","createContext","ToastContext","ToastContextProvider","children","toastList","setToastList","toastProperties","showToast","typeOfToast","toastTitle","toastDescription","id","length","title","description","backgroundColor","useToast"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAoD,OAApD;;AAEA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;;AAEA,IAAIE,oBAAoB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACzC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEA,MAAIQ,eAAe,GAAG,IAAtB;;AAEA,QAAMC,SAAS,GAAG,CAACC,WAAD,EAAcC,UAAd,EAA0BC,gBAA1B,KAClB;AACE,YAAOF,WAAP;AAEE,WAAK,SAAL;AAAiBF,QAAAA,eAAe,GAAG;AACjCK,UAAAA,EAAE,EAAGP,SAAS,CAACQ,MAAV,GAAiB,CADW;AAEjCC,UAAAA,KAAK,EAAGJ,UAFyB;AAGjCK,UAAAA,WAAW,EAAGJ,gBAHmB;AAIjCK,UAAAA,eAAe,EAAG;AAJe,SAAlB;AAMjB;;AACA,WAAK,OAAL;AAAeT,QAAAA,eAAe,GAAG;AAC/BK,UAAAA,EAAE,EAAGP,SAAS,CAACQ,MAAV,GAAiB,CADS;AAE/BC,UAAAA,KAAK,EAAGJ,UAFuB;AAG/BK,UAAAA,WAAW,EAAGJ,gBAHiB;AAI/BK,UAAAA,eAAe,EAAG;AAJa,SAAlB;AAMf;;AACA,WAAK,SAAL;AAAiBT,QAAAA,eAAe,GAAG;AACjCK,UAAAA,EAAE,EAAGP,SAAS,CAACQ,MAAV,GAAiB,CADW;AAEjCC,UAAAA,KAAK,EAAGJ,UAFyB;AAGjCK,UAAAA,WAAW,EAAGJ,gBAHmB;AAIjCK,UAAAA,eAAe,EAAG;AAJe,SAAlB;AAMjB;;AACA,WAAK,MAAL;AAAcT,QAAAA,eAAe,GAAG;AAC9BK,UAAAA,EAAE,EAAGP,SAAS,CAACQ,MAAV,GAAiB,CADQ;AAE9BC,UAAAA,KAAK,EAAGJ,UAFsB;AAG9BK,UAAAA,WAAW,EAAGJ,gBAHgB;AAI9BK,UAAAA,eAAe,EAAG;AAJY,SAAlB;AAMd;;AACA;AAAUT,QAAAA,eAAe,GAAG,EAAlB;AA9BZ;;AAiCAD,IAAAA,YAAY,CAACD,SAAS,IAAE,CAAC,GAAGA,SAAJ,EAAeE,eAAf,CAAZ,CAAZ;AACD,GApCD;;AAsCA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAACF,MAAAA,SAAD;AAAYC,MAAAA,YAAZ;AAA0BE,MAAAA;AAA1B,KAA9B;AAAA,cACKJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKD,CAhDD;;GAAID,oB;;KAAAA,oB;;AAkDJ,IAAIc,QAAQ,GAAG;AAAA;;AAAA,SAAMjB,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAf;;IAAIe,Q;;AAEJ,SAASd,oBAAT,EAA+Bc,QAA/B","sourcesContent":["import { useState, useContext, createContext } from 'react'\r\n\r\nconst ToastContext = createContext()\r\n\r\nlet ToastContextProvider = ({children}) => {\r\n  const [toastList, setToastList] = useState([])\r\n\r\n  let toastProperties = null;\r\n\r\n  const showToast = (typeOfToast, toastTitle, toastDescription) =>\r\n  {\r\n    switch(typeOfToast)\r\n    {\r\n      case \"success\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--onlinestatus-or-success)'\r\n      }\r\n      break;\r\n      case \"error\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--red-color)'\r\n      }\r\n      break;\r\n      case \"warning\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--awaystatus-or-warning)'\r\n      }\r\n      break;\r\n      case \"info\" : toastProperties = {\r\n        id : toastList.length+1,\r\n        title : toastTitle,\r\n        description : toastDescription,\r\n        backgroundColor : 'var(--sky-blue)'\r\n      }\r\n      break;\r\n      default : toastProperties = {}\r\n    }\r\n    \r\n    setToastList(toastList=>[...toastList, toastProperties])\r\n  }\r\n\r\n  return (\r\n      <ToastContext.Provider value={{toastList, setToastList, showToast}}>\r\n          {children}\r\n      </ToastContext.Provider>\r\n  )\r\n}\r\n\r\nlet useToast = () => useContext(ToastContext)\r\n\r\nexport { ToastContextProvider, useToast }"]},"metadata":{},"sourceType":"module"}