{"ast":null,"code":"import _slicedToArray from\"C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import{useReducer,createContext,useContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var OrdersContext=/*#__PURE__*/createContext();var updateOrdersFunc=function updateOrdersFunc(state,action){switch(action.type){case\"UPDATE_USER_ORDERS\":{return _toConsumableArray(action.payload);}default:return state;}};var OrdersContextProvider=function OrdersContextProvider(_ref){var children=_ref.children;var _useReducer=useReducer(updateOrdersFunc,[]),_useReducer2=_slicedToArray(_useReducer,2),userOrders=_useReducer2[0],dispatchUserOrders=_useReducer2[1];return/*#__PURE__*/_jsx(OrdersContext.Provider,{value:{userOrders:userOrders,dispatchUserOrders:dispatchUserOrders},children:children});};var useOrders=function useOrders(){return useContext(OrdersContext);};export{useOrders,OrdersContextProvider};","map":{"version":3,"sources":["C:/Users/pradh/Desktop/devrev/Bookztron-E-Commerce_Book_Store/src/Context/orders-context.js"],"names":["useReducer","createContext","useContext","OrdersContext","updateOrdersFunc","state","action","type","payload","OrdersContextProvider","children","userOrders","dispatchUserOrders","useOrders"],"mappings":"8SAAA,OAASA,UAAT,CAAqBC,aAArB,CAAoCC,UAApC,KAAsD,OAAtD,C,2CAEA,GAAMC,CAAAA,aAAa,cAAGF,aAAa,EAAnC,CAEA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAOC,MAAP,CAAkB,CACvC,OAAOA,MAAM,CAACC,IAAd,EAEI,IAAK,oBAAL,CACI,CACI,0BAAWD,MAAM,CAACE,OAAlB,EACH,CACL,QAAU,MAAOH,CAAAA,KAAP,CANd,CAQH,CATD,CAWA,GAAMI,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CAC1C,gBAAyCV,UAAU,CAACI,gBAAD,CAAkB,EAAlB,CAAnD,4CAAOO,UAAP,iBAAmBC,kBAAnB,iBAEA,mBACI,KAAC,aAAD,CAAe,QAAf,EAAwB,KAAK,CAAE,CAACD,UAAU,CAAVA,UAAD,CAAaC,kBAAkB,CAAlBA,kBAAb,CAA/B,UACKF,QADL,EADJ,CAKH,CARD,CAUA,GAAIG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMX,CAAAA,UAAU,CAACC,aAAD,CAAhB,EAAhB,CAEA,OAASU,SAAT,CAAoBJ,qBAApB","sourcesContent":["import { useReducer, createContext, useContext } from \"react\"\r\n\r\nconst OrdersContext = createContext()\r\n\r\nconst updateOrdersFunc = (state,action) => {\r\n    switch(action.type)\r\n    {\r\n        case \"UPDATE_USER_ORDERS\" : \r\n            {\r\n                return [...action.payload]\r\n            }\r\n        default : return state \r\n    }\r\n}\r\n\r\nconst OrdersContextProvider = ({children}) => {\r\n    const [userOrders, dispatchUserOrders] = useReducer(updateOrdersFunc,[])\r\n\r\n    return (\r\n        <OrdersContext.Provider value={{userOrders, dispatchUserOrders}}>\r\n            {children}\r\n        </OrdersContext.Provider>\r\n    )\r\n}\r\n\r\nlet useOrders = () => useContext(OrdersContext)\r\n\r\nexport { useOrders, OrdersContextProvider }"]},"metadata":{},"sourceType":"module"}