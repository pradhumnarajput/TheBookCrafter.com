[{"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\index.js":"1","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\App.js":"2","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\cart-context.js":"3","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\product-context.js":"4","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\new-arrival-context.js":"5","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\genre-context.js":"6","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\toast-context.js":"7","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\wishlist-context.js":"8","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\orders-context.js":"9","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\user-login-context.js":"10","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\search-bar-context.js":"11","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Card\\ProductCard.js":"12","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Sidebar\\Sidebar.js":"13","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\GenreCards\\GenreCard.js":"14","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Navbar\\Navbar.js":"15","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Toast\\Toast.js":"16","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Footer\\Footer.js":"17","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\WishlistProductCard\\WishlistProductCard.jsx":"18","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\NewArrivals\\NewArrival.jsx":"19","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\HorizontalCard\\HorizontalProductCard.jsx":"20","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\ShoppingBill\\ShoppingBill.jsx":"21","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Pagination\\Pagination.jsx":"22","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\ProductOrderCard\\ProductOrderCard.jsx":"23","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Shop\\Shop.jsx":"24","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\AuthenticationPages\\Signup.jsx":"25","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Home\\Home.jsx":"26","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Cart\\Cart.jsx":"27","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Wishlist\\Wishlist.jsx":"28","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\AuthenticationPages\\Login.jsx":"29","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\ProductPage\\ProductPage.jsx":"30","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Orders\\Orders.jsx":"31","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\UtilityFunctions\\loadRazorpayScript.js":"32"},{"size":3219,"mtime":1695561579654,"results":"33","hashOfConfig":"34"},{"size":1244,"mtime":1695561579469,"results":"35","hashOfConfig":"34"},{"size":699,"mtime":1695561579632,"results":"36","hashOfConfig":"34"},{"size":11572,"mtime":1695561579636,"results":"37","hashOfConfig":"34"},{"size":1003,"mtime":1695561579633,"results":"38","hashOfConfig":"34"},{"size":1340,"mtime":1695561579633,"results":"39","hashOfConfig":"34"},{"size":1589,"mtime":1695561579638,"results":"40","hashOfConfig":"34"},{"size":760,"mtime":1695561579639,"results":"41","hashOfConfig":"34"},{"size":724,"mtime":1695561579634,"results":"42","hashOfConfig":"34"},{"size":497,"mtime":1695561579638,"results":"43","hashOfConfig":"34"},{"size":494,"mtime":1695561579637,"results":"44","hashOfConfig":"34"},{"size":6749,"mtime":1695561579617,"results":"45","hashOfConfig":"34"},{"size":11703,"mtime":1695561579629,"results":"46","hashOfConfig":"34"},{"size":3282,"mtime":1695561579619,"results":"47","hashOfConfig":"34"},{"size":5785,"mtime":1695564194610,"results":"48","hashOfConfig":"34"},{"size":1567,"mtime":1695561579630,"results":"49","hashOfConfig":"34"},{"size":1748,"mtime":1695564037364,"results":"50","hashOfConfig":"34"},{"size":8478,"mtime":1695561579631,"results":"51","hashOfConfig":"34"},{"size":1101,"mtime":1695561579623,"results":"52","hashOfConfig":"34"},{"size":6912,"mtime":1695561579621,"results":"53","hashOfConfig":"34"},{"size":6404,"mtime":1695569240168,"results":"54","hashOfConfig":"34"},{"size":1275,"mtime":1695561579624,"results":"55","hashOfConfig":"34"},{"size":2393,"mtime":1695561579626,"results":"56","hashOfConfig":"34"},{"size":5324,"mtime":1695561579650,"results":"57","hashOfConfig":"34"},{"size":4499,"mtime":1695561579641,"results":"58","hashOfConfig":"34"},{"size":3741,"mtime":1695561579644,"results":"59","hashOfConfig":"34"},{"size":3584,"mtime":1695561579643,"results":"60","hashOfConfig":"34"},{"size":3173,"mtime":1695561579653,"results":"61","hashOfConfig":"34"},{"size":5342,"mtime":1695561579640,"results":"62","hashOfConfig":"34"},{"size":7131,"mtime":1695561579648,"results":"63","hashOfConfig":"34"},{"size":4019,"mtime":1695561579645,"results":"64","hashOfConfig":"34"},{"size":363,"mtime":1695561579653,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nq1kor",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\index.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\App.js",["175","176","177","178","179","180"],[],"import './App.css';\r\nimport { useEffect, useLayoutEffect } from 'react';\r\nimport axios from \"axios\"\r\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom'\r\nimport { \r\n  Navbar, \r\n  Toast,\r\n  Home,\r\n  Shop, \r\n  ProductPage,\r\n  Login,\r\n  Signup,\r\n  Wishlist,\r\n  Cart,\r\n  Orders,\r\n  useUserLogin,\r\n  useWishlist,\r\n  useCart\r\n} from \"./index\"\r\n\r\nfunction App() {\r\n\r\n  const { userLoggedIn } = useUserLogin()\r\n  const { dispatchUserWishlist } = useWishlist()\r\n  const { dispatchUserCart } = useCart()\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <Routes>\r\n          <Route path=\"/\"         exact element={<Home/>} />\r\n          <Route path=\"/shop\"     exact element={<Shop/>} />\r\n          <Route path=\"/shop/:id\"       element={<ProductPage/>} />\r\n          <Route path=\"/login\"          element={<Login/>} />\r\n          <Route path=\"/signup\"         element={<Signup/>} />\r\n          <Route path=\"/wishlist\"       element={<Wishlist/>} />\r\n          <Route path=\"/cart\"           element={<Cart/>} />\r\n          <Route path=\"/orders\"         element={<Orders/>} />\r\n        </Routes>\r\n        <Toast position=\"bottom-right\"/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\cart-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\product-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\new-arrival-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\genre-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\toast-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\wishlist-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\orders-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\user-login-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Context\\search-bar-context.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Card\\ProductCard.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Sidebar\\Sidebar.js",["181","182"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport './Sidebar.css'\r\nimport { useProductAvailable } from \"../../Context/product-context\"\r\nimport { useGenre } from \"../../Context/genre-context\";\r\n\r\nfunction Sidebar() {\r\n  const {\r\n  productsAvailableList,\r\n  dispatchSortedProductsList,\r\n  productFilterOptions,\r\n  dispatchProductFilterOptions\r\n  } = useProductAvailable()\r\n\r\n  const {\r\n    fictionCategoryCheckbox,\r\n    setFictionCategoryCheckbox,\r\n    thrillerCategoryCheckbox, \r\n    setThrillerCategoryCheckbox,\r\n    techCategoryCheckbox, \r\n    setTechCategoryCheckbox,\r\n    philosophyCategoryCheckbox, \r\n    setPhilosophyCategoryCheckbox,\r\n    romanceCategoryCheckbox, \r\n    setRomanceCategoryCheckbox,\r\n    mangaCategoryCheckbox, \r\n    setMangaCategoryCheckbox, \r\n  } = useGenre()\r\n\r\n  const ratingRadioBtnRef = useRef(null)\r\n\r\n  const [sortPriceLowToHigh, setSortPriceLowToHigh ] = useState(false)\r\n  const [sortPriceHighToLow, setSortPriceHighToLow ] = useState(false)\r\n  \r\n  const [includeOutOfStockCheckbox, setIncludeOutOfStockCheckbox] = useState(true);\r\n  const [fastDeliveryOnlyCheckbox, setFastDeliveryOnlyCheckbox] = useState(false);\r\n\r\n  const [minPriceRange, setMinPriceRange] = useState(0);\r\n  const [maxPriceRange, setMaxPriceRange] = useState(1200);\r\n\r\n\r\n  useEffect(()=>{\r\n    dispatchSortedProductsList({type:\"UPDATE_LIST_AS_PER_FILTERS\",payload:productFilterOptions})\r\n    if(sortPriceLowToHigh){ setSortPriceLowToHigh(true); setSortPriceHighToLow(false); dispatchSortedProductsList({type:\"PRICE_LOW_TO_HIGH\"}) }\r\n    if(sortPriceHighToLow){ setSortPriceLowToHigh(false); setSortPriceHighToLow(true); dispatchSortedProductsList({type:\"PRICE_HIGH_TO_LOW\"}) }\r\n  },[productFilterOptions, dispatchSortedProductsList])\r\n\r\n  function clearFilters()\r\n  {\r\n    setMinPriceRange(0)\r\n    setMaxPriceRange(1200)\r\n    setFictionCategoryCheckbox(true)\r\n    setThrillerCategoryCheckbox(true)\r\n    setTechCategoryCheckbox(true)\r\n    setPhilosophyCategoryCheckbox(true)\r\n    setRomanceCategoryCheckbox(true)\r\n    setMangaCategoryCheckbox(true)\r\n    ratingRadioBtnRef.current.click()\r\n    setSortPriceLowToHigh(false) \r\n    setSortPriceHighToLow(false)\r\n    setIncludeOutOfStockCheckbox(true)\r\n    setFastDeliveryOnlyCheckbox(false)\r\n    dispatchProductFilterOptions({type:\"RESET_DEFAULT_FILTERS\"})\r\n  }\r\n\r\n  return (\r\n    <aside className=\"product-page-sidebar\">\r\n      <div className=\"filter-clear-options\">\r\n        <p className=\"sidebar-filter-option\">Filters</p>\r\n        <p onClick={clearFilters}className=\"sidebar-clear-option text-underline\">Clear</p>\r\n      </div>\r\n\r\n      <div className=\"price-slider\">\r\n        <p>Price</p>\r\n\r\n        <div className=\"price-input\">\r\n          <div className=\"field\">\r\n            <span>Min</span>\r\n            <input\r\n              onChange={(e) => {\r\n                setMinPriceRange(e.target.value); \r\n                if(maxPriceRange-e.target.value>100)\r\n                {\r\n                  dispatchProductFilterOptions({type:\"UPDATE_MIN_PRICE_RANGE_FILTER\",minPrice:e.target.value})\r\n                }\r\n              }}\r\n              type=\"number\"\r\n              className=\"input-min\"\r\n              value={minPriceRange}\r\n              max=\"10000\"\r\n            />\r\n          </div>\r\n          <div className=\"separator\">-</div>\r\n          <div className=\"field\">\r\n            <span>Max</span>\r\n            <input\r\n              onChange={(e) => {\r\n                setMaxPriceRange(e.target.value);\r\n                if(e.target.value-minPriceRange>100)\r\n                {\r\n                  setMaxPriceRange(e.target.value); \r\n                  dispatchProductFilterOptions({type:\"UPDATE_MAX_PRICE_RANGE_FILTER\",maxPrice:e.target.value})\r\n                }\r\n              }}\r\n              type=\"number\"\r\n              className=\"input-max\"\r\n              value={maxPriceRange}\r\n              max=\"10000\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"slider\">\r\n          <div\r\n            className=\"progress\"\r\n            style={{\r\n              left: (minPriceRange / 1200) * 100 + \"%\",\r\n              right: 100 - (maxPriceRange / 1200) * 100 + \"%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        <div className=\"range-input\">\r\n          <input\r\n            onChange={(e) => {\r\n              if(maxPriceRange-e.target.value>100)\r\n              {\r\n                setMinPriceRange(e.target.value); \r\n                dispatchProductFilterOptions({type:\"UPDATE_MIN_PRICE_RANGE_FILTER\",minPrice:e.target.value})\r\n              }\r\n            }}\r\n            type=\"range\"\r\n            className=\"range-min\"\r\n            min=\"0\"\r\n            max=\"1200\"\r\n            value={minPriceRange}\r\n            step=\"50\"\r\n          />\r\n          <input\r\n            onChange={(e) => {\r\n              if(e.target.value-minPriceRange>100)\r\n              {\r\n                setMaxPriceRange(e.target.value); \r\n                dispatchProductFilterOptions({type:\"UPDATE_MAX_PRICE_RANGE_FILTER\",maxPrice:e.target.value})\r\n              }\r\n            }}\r\n            type=\"range\"\r\n            className=\"range-max\"\r\n            min=\"0\"\r\n            max=\"1200\"\r\n            value={maxPriceRange}\r\n            step=\"50\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"product-category\">\r\n        <p>Category</p>\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() =>{ setFictionCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_FICTION_FILTER\"}) }}\r\n            id=\"fiction-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={fictionCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"fiction-checkbox\">Fiction</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() => {setThrillerCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_THRILLER_FILTER\"}) } }\r\n            id=\"thriller-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={thrillerCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"thriller-checkbox\">Thriller</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() => {setTechCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_TECH_FILTER\"}) } }\r\n            id=\"tech-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={techCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"tech-checkbox\">Tech</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() => {setPhilosophyCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_PHILOSOPHY_FILTER\"}) }}\r\n            id=\"philosophy-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={philosophyCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"philosophy-checkbox\">Philosophy</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() => {setRomanceCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_ROMANCE_FILTER\"}) } }\r\n            id=\"romance-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={romanceCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"romance-checkbox\">Romance</label>\r\n        </div>\r\n\r\n        <div className=\"checkbox-item\">\r\n          <input\r\n            onChange={() => {setMangaCategoryCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_MANGA_FILTER\"}) } }\r\n            id=\"manga-checkbox\"\r\n            type=\"checkbox\"\r\n            checked={mangaCategoryCheckbox}\r\n          />\r\n          <label htmlFor=\"manga-checkbox\">Manga</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"product-page-rating-radio\">\r\n        <p>Rating</p>\r\n\r\n        <div className=\"rating-items\">\r\n          <input\r\n            onChange={() => dispatchProductFilterOptions({type:\"UPDATE_MINIMUM_RATING_FILTER\",minRating : 4})   }\r\n            type=\"radio\"\r\n            id=\"4-stars-or-above\"\r\n            name=\"rating\"\r\n            value=\"4-stars-or-above\"\r\n          />\r\n          <label htmlFor=\"4-stars-or-above\">4 stars or above</label>\r\n        </div>\r\n\r\n        <div className=\"rating-items\">\r\n          <input\r\n            onChange={() => dispatchProductFilterOptions({type:\"UPDATE_MINIMUM_RATING_FILTER\",minRating : 3})   }\r\n            type=\"radio\"\r\n            id=\"3-stars-or-above\"\r\n            name=\"rating\"\r\n            value=\"3-stars-or-above\"\r\n          />\r\n          <label htmlFor=\"3-stars-or-above\">3 stars or above</label>\r\n        </div>\r\n\r\n        <div className=\"rating-items\">\r\n          <input\r\n            onChange={() => dispatchProductFilterOptions({type:\"UPDATE_MINIMUM_RATING_FILTER\",minRating : 2})   }\r\n            type=\"radio\"\r\n            id=\"2-stars-or-above\"\r\n            name=\"rating\"\r\n            value=\"2-stars-or-above\"\r\n          />\r\n          <label htmlFor=\"2-stars-or-above\">2 stars or above</label>\r\n        </div>\r\n\r\n        <div className=\"rating-items\">\r\n          <input\r\n            onChange={() => dispatchProductFilterOptions({type:\"UPDATE_MINIMUM_RATING_FILTER\",minRating : 1})   }\r\n            type=\"radio\"\r\n            id=\"1-stars-or-above\"\r\n            name=\"rating\"\r\n            value=\"1-stars-or-above\"\r\n            defaultChecked\r\n            ref={ratingRadioBtnRef}\r\n          />\r\n          <label htmlFor=\"1-stars-or-above\">1 stars or above</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"product-page-sortby-radio\">\r\n        <p>Sort By</p>\r\n\r\n        <div className=\"sortby-items\">\r\n          <input\r\n            onChange={() => { setSortPriceLowToHigh(true); setSortPriceHighToLow(false); dispatchSortedProductsList({type:\"PRICE_LOW_TO_HIGH\"}) } }\r\n            type=\"radio\"\r\n            id=\"price-low-to-high\"\r\n            name=\"sort-by\"\r\n            value=\"price-low-to-high\"\r\n            checked={sortPriceLowToHigh}\r\n          />\r\n          <label htmlFor=\"price-low-to-high\">Price - Low to High</label>\r\n        </div>\r\n\r\n        <div className=\"sortby-items\">\r\n          <input\r\n            onChange={() => { setSortPriceLowToHigh(false); setSortPriceHighToLow(true); dispatchSortedProductsList({type:\"PRICE_HIGH_TO_LOW\"}) } }\r\n            type=\"radio\"\r\n            id=\"price-high-to-low\"\r\n            name=\"sort-by\"\r\n            value=\"price-high-to-low\"\r\n            checked={sortPriceHighToLow}\r\n          />\r\n          <label htmlFor=\"price-high-to-low\">Price - High to Low</label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"additional-filters\">\r\n        <p>Additional filters</p>\r\n\r\n        <div>\r\n          <input\r\n            id=\"out-of-stock-checkbox\"\r\n            value=\"\"\r\n            onChange={(e) => {setIncludeOutOfStockCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_OUTOFSTOCK_FILTER\"}) }  }\r\n            type=\"checkbox\"\r\n            checked={includeOutOfStockCheckbox}\r\n          />\r\n          <label htmlFor=\"out-of-stock-checkbox\">\r\n            Include out of stock products\r\n          </label>\r\n        </div>\r\n\r\n        <div>\r\n          <input\r\n            id=\"fast-delivery-available-checkbox\"\r\n            value=\"\"\r\n            onChange={(e) => {setFastDeliveryOnlyCheckbox(prevState=>!prevState); dispatchProductFilterOptions({type:\"UPDATE_FASTDELIVERY_FILTER\"})} }\r\n            type=\"checkbox\"\r\n            checked={fastDeliveryOnlyCheckbox}\r\n          />\r\n          <label htmlFor=\"fast-delivery-available-checkbox\">\r\n            Fast delivery only\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n}\r\n\r\nexport { Sidebar };\r\n","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\GenreCards\\GenreCard.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Navbar\\Navbar.js",["183","184"],[],"import React, { useEffect } from 'react'\r\nimport './Navbar.css'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useUserLogin, useToast, useWishlist, useCart, useOrders, useSearchBar } from \"../../index\"\r\nimport { BsShopWindow, BsFillBagFill } from \"react-icons/bs\"\r\n\r\nfunction Navbar() {\r\n\r\n    const { userWishlist, dispatchUserWishlist } = useWishlist()\r\n    const { userCart, dispatchUserCart } = useCart()\r\n    const { userOrders, dispatchUserOrders } = useOrders()\r\n    const { setUserLoggedIn } = useUserLogin(false)\r\n    const { showToast } = useToast()\r\n    const location = useLocation()\r\n    const { searchBarTerm, setSearchBarTerm } = useSearchBar()\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            \r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n                setUserLoggedIn(false)\r\n            }\r\n            else\r\n            {\r\n                setUserLoggedIn(true)\r\n            }\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        function handleInvalidToken() {\r\n            if(localStorage.getItem('token')!==null)\r\n            {\r\n                setUserLoggedIn(true)\r\n            }\r\n            else\r\n            {\r\n                setUserLoggedIn(false)\r\n                dispatchUserWishlist({type:\"UPDATE_USER_WISHLIST\",payload:[]})\r\n                dispatchUserCart({type:\"UPDATE_USER_CART\",payload:[]})\r\n                dispatchUserOrders({type:\"UPDATE_USER_ORDERS\",payload:[]})\r\n            }\r\n        }\r\n        window.addEventListener(\"storage\",handleInvalidToken)\r\n\r\n        return function cleanup() {\r\n            window.removeEventListener('storage', handleInvalidToken)\r\n        }\r\n    },[userWishlist,userCart])\r\n\r\n    function logoutUser()\r\n    {\r\n        localStorage.removeItem('token')\r\n        dispatchUserWishlist({type:\"UPDATE_USER_WISHLIST\",payload:[]})\r\n        dispatchUserCart({type:\"UPDATE_USER_CART\",payload:[]})\r\n        dispatchUserOrders({type:\"UPDATE_USER_ORDERS\",payload:[]})\r\n        setUserLoggedIn(false)\r\n        localStorage.clear()\r\n        showToast(\"success\",\"\",\"Logged out successfully\")\r\n    }\r\n    \r\n    return (\r\n        <div className=\"top-bar\">\r\n            <div className=\"left-topbar-container\">\r\n                {/* <button id=\"top-bar-ham-menu-btn\" className=\"icon-btn\"><i className=\"fa fa-bars\" aria-hidden=\"true\"></i></button> */}\r\n                <Link to=\"/\">\r\n                    <h2 className=\"top-bar-brand-name\">TheBookCrafter.com</h2>\r\n                </Link>\r\n                {\r\n                    location.pathname===\"/shop\" && \r\n                    (\r\n                        <div className=\"search-bar\">\r\n                            <input \r\n                                className=\"search-bar-input\" \r\n                                placeholder=\"Search\"\r\n                                value={searchBarTerm}\r\n                                onChange={event=>setSearchBarTerm(event.target.value)}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n            <div className=\"right-topbar-container\">\r\n                {\r\n                    localStorage.getItem('token')!==null\r\n                    ? (\r\n                        <button onClick={logoutUser} className=\"navbar-login-btn solid-primary-btn\">Logout</button>\r\n                    )\r\n                    : (\r\n                        <Link to=\"/login\">\r\n                            <button className=\"navbar-login-btn solid-primary-btn\">Login</button>\r\n                        </Link>\r\n                    )\r\n                }\r\n                <Link to=\"/shop\">\r\n                    <button className=\"icon-btn\">\r\n                        <div>\r\n                            <BsShopWindow/>\r\n                        </div>\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/wishlist\">\r\n                    <button className=\"icon-btn\">\r\n                        <div className=\"icon-count-badge\">\r\n                            <i className=\"fa fa-heart-o fa-x\" aria-hidden=\"true\" ></i>\r\n                            {\r\n                                userWishlist.length!==0\r\n                                && (<span className=\"count-badge-x\">{userWishlist.length}</span>)\r\n                            }\r\n                        </div>\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/cart\">\r\n                    <button className=\"icon-btn\">\r\n                        <div className=\"icon-count-badge\">\r\n                            <i className=\"fa fa-shopping-cart fa-x\" aria-hidden=\"true\" ></i>\r\n                            {\r\n                                userCart.length!==0\r\n                                && (<span className=\"count-badge-x\">{userCart.length}</span>)\r\n                            }\r\n                        </div>\r\n                    </button>\r\n                </Link>\r\n                <Link to=\"/orders\">\r\n                    <button className=\"icon-btn\">\r\n                        <div className=\"icon-count-badge\">\r\n                        <BsFillBagFill \r\n                            style={{\r\n                                marginBottom:\"4px\"\r\n                            }}\r\n                        />\r\n                        {\r\n                            userOrders.length!==0\r\n                            && (<span className=\"count-badge-x\">{userOrders.length}</span>)\r\n                        }\r\n                        </div>\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Navbar};","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Toast\\Toast.js",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Footer\\Footer.js",["185"],[],"import React from 'react'\r\nimport \"./Footer.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className='footer-container'>\r\n            <ul className='footer-list'>\r\n                <li><h2>ABOUT</h2></li>\r\n                <li><p>Contact us</p></li>\r\n                <li><p>About us</p></li>\r\n                <li><p>Careers</p></li>\r\n                <li><p>Gift Cards</p></li>\r\n            </ul>\r\n            <ul className='footer-list'>\r\n                <li><h2>HELP</h2></li>\r\n                <li><p>Payments</p></li>\r\n                <li><p>Shipping</p></li>\r\n                <li><p>Cancellation & Returns</p></li>\r\n                <li><p>FAQs</p></li>\r\n            </ul>\r\n            <ul className='footer-list'>\r\n                <li><h2>SOCIALS</h2></li>\r\n                <li>\r\n                    <a href=\"https://www.linkedin.com/in/pradhumna-rajput-38b954179/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <p>Linkedin</p>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://github.com/pradhumnarajput\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <p>Github</p>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://twitter.com/_Pradhumna_\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <p>Twitter</p>\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.instagram.com/kinda._.different/\" rel=\"noreferrer\" target=\"_blank\">\r\n                        <p>Instagram</p>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Footer } ","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\WishlistProductCard\\WishlistProductCard.jsx",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\NewArrivals\\NewArrival.jsx",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\HorizontalCard\\HorizontalProductCard.jsx",["186","187"],[],"import \"./HorizontalProductCard.css\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useToast, useCart, useWishlist } from \"../../index\"\r\nimport { useEffect } from \"react\";\r\n\r\nfunction HorizontalProductCard({productDetails})\r\n{\r\n    const navigate = useNavigate()\r\n\r\n    const { showToast } = useToast()\r\n    const { dispatchUserWishlist } = useWishlist()\r\n    const { dispatchUserCart } = useCart()\r\n    const {\r\n        _id, \r\n        bookName,\r\n        author,\r\n        originalPrice,\r\n        discountedPrice,\r\n        discountPercent,\r\n        imgSrc, \r\n        imgAlt,\r\n        badgeText, \r\n        outOfStock, \r\n        quantity\r\n    } = productDetails;\r\n    const productdetails = productDetails;\r\n\r\n    const [productQuantity, setProductQuantity] = useState(Number(quantity))\r\n\r\n    useEffect(()=>{\r\n        (async function onQuantityChange()\r\n        {\r\n            \r\n            let newQuantity = productQuantity\r\n            let quantityUpdateResponse = await axios.patch(\r\n                `https://bookztron-server.vercel.app/api/cart/${_id}`,\r\n                {\r\n                    newQuantity\r\n                },\r\n                {\r\n                    headers:\r\n                    {\r\n                        'x-access-token': localStorage.getItem('token'),\r\n                    }\r\n                }\r\n            )\r\n\r\n            if(quantityUpdateResponse.data.status===\"ok\")\r\n            {\r\n                dispatchUserCart({type: \"UPDATE_USER_CART\",payload: quantityUpdateResponse.data.user.cart})\r\n            }\r\n            else\r\n            {\r\n                showToast(\"error\",\"\",\"Something went wrong!\")\r\n            }\r\n        })()\r\n    },[productQuantity])\r\n    \r\n\r\n    async function removeItemFromCart(event)\r\n    {\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n                \r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n                showToast(\"warning\",\"\",\"Kindly Login\")\r\n                navigate('/login')\r\n            }\r\n            else\r\n            {\r\n                let cartUpdateResponse = await axios.delete(\r\n                    `https://bookztron-server.vercel.app/api/cart/${productDetails._id}`,\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    },\r\n                    {\r\n                        productDetails\r\n                    }\r\n                )\r\n                if(cartUpdateResponse.data.status===\"ok\")\r\n                {\r\n                    dispatchUserCart({type: \"UPDATE_USER_CART\",payload: cartUpdateResponse.data.user.cart})\r\n                    showToast(\"success\",\"\",\"Item successfully deleted from cart\")\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            showToast(\"warning\",\"\",\"Kindly Login\")\r\n        } \r\n    }\r\n\r\n    async function addItemToWishlist()\r\n    {\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            \r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n                showToast(\"warning\",\"\",\"Kindly Login\")\r\n                navigate('/login')\r\n            }\r\n            else\r\n            {\r\n                const wishlistUpdateResponse = await axios.patch(\r\n                    \"https://bookztron-server.vercel.app/api/wishlist\",\r\n                    {\r\n                        productdetails\r\n                    },\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    }\r\n                )\r\n        \r\n                if(wishlistUpdateResponse.data.status===\"ok\")\r\n                {\r\n                    dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: wishlistUpdateResponse.data.user.wishlist})\r\n                    showToast(\"success\",\"\",\"Item successfully added to wishlist\")\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            showToast(\"warning\",\"\",\"Kindly Login\")\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"card-basic-horizontal\">\r\n            <img className=\"cart-item-book-img\" src={imgSrc} alt={imgAlt}/>\r\n            <div id=\"cart-item-detail\" className=\"card-item-details\">\r\n\r\n                <h4 id=\"item-title\">{bookName}</h4>\r\n                <p className=\"item-author\">- By &nbsp;{author}</p>\r\n                <p className=\"price-details\">\r\n                                &#8377; {discountedPrice} &nbsp;&nbsp;<del>&#8377; {originalPrice}</del> &nbsp;&nbsp;\r\n                    <span className=\"discount-on-card\">{discountPercent}% off</span>\r\n                </p>\r\n    \r\n                <div className=\"item-cart-quantity\">\r\n                    <p className=\"cart-quantity-para\">Quantity : &nbsp;&nbsp;</p>\r\n                    <div className=\"quantity-manage-container\">\r\n                        <div className=\"quantity-change\" onClick={()=>{\r\n                            setProductQuantity(prevQuantity=>Number(prevQuantity)-1);\r\n                        }}>-</div>\r\n                        <input \r\n                            className=\"cart-item-quantity-input\" \r\n                            value={productQuantity}\r\n                            onChange={(event)=>{\r\n                                setProductQuantity(event.target.value);\r\n                            }}\r\n                            type=\"text\" \r\n                            maxLength=\"3\" \r\n                            autoComplete=\"off\"/>\r\n                        <div className=\"quantity-change\" onClick={()=>{\r\n                            setProductQuantity(prevQuantity=>Number(prevQuantity)+1);\r\n                        }}>+</div>\r\n                    </div>\r\n                </div>\r\n    \r\n                <div className=\"cart-horizontal-card-btns card-button\">\r\n                    <button \r\n                        className=\"solid-primary-btn\"\r\n                        onClick={event=>removeItemFromCart(event)}\r\n                    >\r\n                        Remove from Cart\r\n                    </button>\r\n                    <button \r\n                        className=\"outline-primary-btn\"\r\n                        onClick={()=>addItemToWishlist()}\r\n                    >\r\n                        Add to Wishlist\r\n                    </button>\r\n                </div>\r\n                <div className=\"badge-on-card\">\r\n                    {badgeText}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { HorizontalProductCard }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\ShoppingBill\\ShoppingBill.jsx",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\Pagination\\Pagination.jsx",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Components\\ProductOrderCard\\ProductOrderCard.jsx",["188","189","190","191","192","193","194","195"],[],"import \"./ProductOrderCard.css\"\r\nimport { useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useToast, useOrders } from \"../../index\"\r\n\r\nfunction ProductOrderCard({productDetails})\r\n{\r\n    const { dispatchUserOrders } = useOrders()\r\n    const navigate = useNavigate()\r\n\r\n    const { showToast } = useToast()\r\n    const {\r\n        _id, \r\n        bookName,\r\n        author,\r\n        originalPrice,\r\n        discountedPrice,\r\n        discountPercent,\r\n        imgSrc, \r\n        imgAlt,\r\n        badgeText, \r\n        outOfStock, \r\n        quantity,\r\n        orderId\r\n    } = productDetails;\r\n\r\n    const removeItemFromOrders = async () => {\r\n        let updatedUserInfo = await axios.patch(\r\n            `https://bookztron-server.vercel.app/api/orders/${_id}`,\r\n            {\r\n                orderId\r\n            },\r\n            {\r\n                headers : {'x-access-token': localStorage.getItem('token')}\r\n            }\r\n        )\r\n        if(updatedUserInfo.data.status===\"ok\")\r\n        {\r\n            dispatchUserOrders({type: \"UPDATE_USER_ORDERS\",payload: updatedUserInfo.data.user.orders})\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"card-basic-horizontal\">\r\n            <img className=\"cart-item-book-img\" src={imgSrc} alt={imgAlt}/>\r\n            <div id=\"cart-item-detail\" className=\"card-item-details\">\r\n\r\n                <h4 id=\"item-title\">{bookName}</h4>\r\n                <p className=\"item-author\">By &nbsp;{author}</p>\r\n    \r\n                <div className=\"item-cart-quantity\">\r\n                    <p className=\"cart-quantity-para\">Quantity : &nbsp;&nbsp;</p>\r\n                    <p>\r\n                        {quantity}\r\n                    </p>\r\n                </div>\r\n\r\n                <p className=\"order-id\">Order id: {orderId}</p>\r\n    \r\n                <div className=\"cart-horizontal-card-btns card-button\">\r\n                    <button \r\n                        className=\"solid-primary-btn\"\r\n                        onClick={removeItemFromOrders}\r\n                    >\r\n                        Remove item from Order\r\n                    </button>\r\n                </div>\r\n                <div className=\"badge-on-card\">\r\n                    {badgeText}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ProductOrderCard }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Shop\\Shop.jsx",["196","197","198"],[],"import React, { useState, useEffect } from 'react'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport \"./Shop.css\"\r\nimport { \r\n  Sidebar, \r\n  ProductCard,\r\n  useWishlist,\r\n  useCart,\r\n  useSearchBar,\r\n  Pagination\r\n} from \"../../index.js\"\r\nimport { useProductAvailable } from \"../../Context/product-context\"\r\nimport axios from 'axios'\r\n\r\nfunction Shop(props) {\r\n\r\n    let { \r\n      productsAvailableList, \r\n      dispatchSortedProductsList, \r\n      productFilterOptions \r\n    } = useProductAvailable()\r\n\r\n    const { dispatchUserWishlist } = useWishlist()\r\n    const { dispatchUserCart } = useCart()\r\n    const { pathname } = useLocation();\r\n    const { searchBarTerm } = useSearchBar()\r\n    const [ currentPage, setCurrentPage ] = useState(1)\r\n    const [ productsPerPage, setProductsPerPage ] = useState(12)\r\n  \r\n    useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n    }, [pathname, currentPage]);\r\n\r\n    useEffect(()=>{\r\n      \r\n      if( (JSON.stringify(productsAvailableList)===JSON.stringify([]))\r\n          && (\r\n              JSON.stringify(productFilterOptions)===JSON.stringify({\r\n              includeOutOfStock        : true,\r\n              onlyFastDeliveryProducts : false,\r\n              minPrice                 : 0,\r\n              maxPrice                 : 1200,\r\n              fiction                  : true,\r\n              thriller                 : true,\r\n              tech                     : true,\r\n              philosophy               : true,\r\n              romance                  : true,\r\n              manga                    : true,\r\n              minRating                : 1}) \r\n             )\r\n        )\r\n      {\r\n        //Refresh happened - Filters are default yet productsAvailableList is empty\r\n        //Redo api call to get data\r\n        try {\r\n          (async () => {\r\n            const productsAvailableData = await axios.get('https://bookztron-server.vercel.app/api/home/products')\r\n            dispatchSortedProductsList({type:\"ADD_ITEMS_TO_PRODUCTS_AVAILABLE_LIST\", payload: [...productsAvailableData.data.productsList] })\r\n          }) ()\r\n        }\r\n        catch(error) {\r\n          console.log(\"Error : \", error);\r\n        }\r\n      }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n      const token=localStorage.getItem('token')\r\n\r\n      if(token)\r\n      {\r\n        const user = jwt_decode(token)\r\n        if(!user)\r\n        {\r\n            localStorage.removeItem('token')\r\n        }\r\n        else\r\n        {\r\n          (async function getUpdatedWishlistAndCart()\r\n          {\r\n            let updatedUserInfo = await axios.get(\r\n            \"https://bookztron-server.vercel.app/api/user\",\r\n            {\r\n              headers:\r\n              {\r\n                'x-access-token': localStorage.getItem('token'),\r\n              }\r\n            })\r\n\r\n            if(updatedUserInfo.data.status===\"ok\")\r\n            {\r\n              dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n              dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n            }\r\n          })()\r\n        }\r\n      }   \r\n    },[])\r\n\r\n    let searchedProducts = productsAvailableList\r\n    .filter(productdetails=>{\r\n      return (\r\n        productdetails.bookName.toLowerCase().includes(searchBarTerm.toLowerCase()) \r\n        || productdetails.author.toLowerCase().includes(searchBarTerm.toLowerCase())\r\n      )\r\n    })\r\n\r\n    const indexOfLastProduct = currentPage * productsPerPage;\r\n    const indexOfFirstProduct= indexOfLastProduct - productsPerPage;\r\n    let currentSearchedProducts = searchedProducts.slice(indexOfFirstProduct, indexOfLastProduct)\r\n    let currentProductsAvailableList = productsAvailableList.slice(indexOfFirstProduct, indexOfLastProduct)\r\n\r\n    return (\r\n        <div>\r\n            <div className='shop-container'>\r\n                <Sidebar/>\r\n                <div className='products-container'>\r\n                    <h2>Showing {searchBarTerm === \"\"?productsAvailableList.length:searchedProducts.length} products</h2>\r\n                    <div className=\"products-card-grid\">\r\n                        {\r\n                            productsAvailableList && \r\n                            (\r\n                              searchBarTerm === \"\" ?\r\n                              (\r\n                                currentProductsAvailableList.map(productdetails => (\r\n                                  <ProductCard key={productdetails._id} productdetails={productdetails} />\r\n                                ))\r\n                              ) : (\r\n                                currentSearchedProducts.map(productdetails => (\r\n                                  <ProductCard key={productdetails._id} productdetails={productdetails} />\r\n                                ))\r\n                              )\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <Pagination \r\n                      productsPerPage={productsPerPage} \r\n                      totalProducts={searchBarTerm === \"\"?productsAvailableList.length:searchedProducts.length}\r\n                      paginate={setCurrentPage}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Shop }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\AuthenticationPages\\Signup.jsx",[],[],"C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Home\\Home.jsx",["199"],[],"import React,{ useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport LibraryIllustration from \"../..//Assets/Images/Library_Illustration_1.jpg\"\r\nimport './Home.css'\r\nimport jwt_decode from \"jwt-decode\"\r\nimport {  \r\n  GenreCard, \r\n  NewArrivals,\r\n  Footer,\r\n  useWishlist,\r\n  useCart \r\n} from \"../../index.js\"\r\nimport { useProductAvailable } from \"../../Context/product-context\"\r\nimport { useGenre } from \"../../Context/genre-context\"\r\n\r\nfunction Home() {\r\n  const { dispatchProductFilterOptions } = useProductAvailable()\r\n  const { dispatchUserWishlist } = useWishlist()\r\n  const { dispatchUserCart } = useCart()\r\n  const {\r\n    setFictionCategoryCheckbox,\r\n    setThrillerCategoryCheckbox,\r\n    setTechCategoryCheckbox,\r\n    setPhilosophyCategoryCheckbox,\r\n    setRomanceCategoryCheckbox,\r\n    setMangaCategoryCheckbox, \r\n  } = useGenre()\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  useEffect(()=>{\r\n      const token=localStorage.getItem('token')\r\n\r\n      if(token)\r\n      {\r\n          const user = jwt_decode(token)\r\n          if(!user)\r\n          {\r\n              localStorage.removeItem('token')\r\n          }\r\n          else\r\n          {\r\n              (async function getUpdatedWishlistAndCart()\r\n              {\r\n                  let updatedUserInfo = await axios.get(\r\n                  \"https://bookztron-server.vercel.app/api/user\",\r\n                  {\r\n                      headers:\r\n                      {\r\n                      'x-access-token': localStorage.getItem('token'),\r\n                      }\r\n                  })\r\n\r\n                  if(updatedUserInfo.data.status===\"ok\")\r\n                  {\r\n                      dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                      dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                  }\r\n              })()\r\n          }\r\n      }   \r\n  },[])\r\n\r\n  return (\r\n    <div className='home-component-container'>\r\n      <div className='home-page-img-container'>\r\n        <img className=\"home-page-background-img\" src={LibraryIllustration} alt=\"Library Illustration\"/>\r\n      </div>\r\n\r\n      <h1 className='homepage-headings'>Genres</h1>\r\n      <div className='genre-cards-container'>\r\n          \r\n        <Link to={\"/shop\"}> \r\n            <GenreCard genretype=\"Fiction\"/>\r\n        </Link>\r\n        <Link to={\"/shop\"}> \r\n            <GenreCard genretype=\"Thriller\"/>\r\n        </Link>\r\n        <Link to={\"/shop\"}> \r\n            <GenreCard genretype=\"Tech\"/>\r\n        </Link>\r\n        <Link to={\"/shop\"}> \r\n            <GenreCard genretype=\"Philosophy\"/>\r\n        </Link>\r\n        <Link to={\"/shop\"}> \r\n            <GenreCard genretype=\"Romance\"/>\r\n        </Link>\r\n        <Link to={\"/shop\"} state={{navigate: true}}> \r\n            <GenreCard genretype=\"Manga\"/>\r\n        </Link>\r\n\r\n      </div>\r\n\r\n      <Link to={\"/shop\"}>\r\n        <button \r\n          onClick={()=>{\r\n            setFictionCategoryCheckbox(true)\r\n            setThrillerCategoryCheckbox(true)\r\n            setTechCategoryCheckbox(true)\r\n            setPhilosophyCategoryCheckbox(true)\r\n            setRomanceCategoryCheckbox(true)\r\n            setMangaCategoryCheckbox(true)\r\n            dispatchProductFilterOptions({type:\"RESET_DEFAULT_FILTERS\"}) }  \r\n          }\r\n          className=\"solid-secondary-btn homepage-explore-all-btn\">\r\n          Explore All\r\n        </button>\r\n      </Link>\r\n\r\n      <h1 className='homepage-headings'>New Arrivals</h1>\r\n      <NewArrivals/>\r\n      <Footer/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Home };","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Cart\\Cart.jsx",["200"],[],"import \"./Cart.css\"\r\nimport { useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { \r\n    useWishlist, \r\n    useCart, \r\n    HorizontalProductCard,\r\n    ShoppingBill \r\n} from \"../../index\"\r\nimport Lottie from 'react-lottie';\r\nimport CartLottie from \"../../Assets/Icons/cart.json\"\r\n\r\nfunction Cart()\r\n{\r\n    const { userWishlist, dispatchUserWishlist } = useWishlist()\r\n    const { userCart, dispatchUserCart } = useCart()\r\n    let cartObj = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData : CartLottie,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n            }\r\n            else\r\n            {\r\n                if(userCart.length===0 || userWishlist.length===0)\r\n                {\r\n                    (async function getUpdatedWishlistAndCart()\r\n                    {\r\n                        let updatedUserInfo = await axios.get(\r\n                        \"https://bookztron-server.vercel.app/api/user\",\r\n                        {\r\n                            headers:\r\n                            {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                            }\r\n                        })\r\n\r\n                        if(updatedUserInfo.data.status===\"ok\")\r\n                        {\r\n                            dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                            dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                        }\r\n                    })()\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: []})\r\n            dispatchUserCart({type: \"UPDATE_USER_CART\",payload: []})\r\n        }   \r\n    },[])\r\n\r\n    return (\r\n        <div className=\"cart-content-container\">\r\n            <h2>{userCart.length} items in Cart</h2>\r\n            {\r\n                userCart.length === 0\r\n                ? (\r\n                    <div className=\"empty-cart-message-container\">\r\n                            <Lottie options={cartObj}\r\n                                height={150}\r\n                                width={150}\r\n                                isStopped={false}\r\n                                isPaused={false}\r\n                            />\r\n                            <h2>Your cart is empty 🙃</h2>\r\n                            <Link to=\"/shop\">\r\n                                <button className=\" solid-primary-btn\">Go to shop</button>\r\n                            </Link>\r\n                    </div>\r\n                )\r\n                : (\r\n                    <div className=\"cart-grid\">\r\n                        <div className=\"cart-items-grid\">\r\n                            {\r\n                                userCart.map( (productDetails, index)=>    \r\n                                    <HorizontalProductCard key={index} productDetails={productDetails}/>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <ShoppingBill/>\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Cart }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Wishlist\\Wishlist.jsx",["201","202"],[],"import \"./Wishlist.css\"\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport {  } from \"../../Context/wishlist-context\"\r\nimport { \r\n    WishlistProductCard,\r\n    useWishlist,\r\n    useCart \r\n} from \"../../index\"\r\nimport Lottie from 'react-lottie';\r\nimport HeartLottie from \"../../Assets/Icons/heart.json\"\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Wishlist()\r\n{\r\n    const { userWishlist, dispatchUserWishlist } = useWishlist()\r\n    const { dispatchUserCart } = useCart()\r\n\r\n    let heartObj = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData : HeartLottie,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n            }\r\n            else\r\n            {\r\n                (async function getUpdatedWishlistAndCart()\r\n                {\r\n                    let updatedUserInfo = await axios.get(\r\n                    \"https://bookztron-server.vercel.app/api/user\",\r\n                    {\r\n                        headers:\r\n                        {\r\n                        'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    })\r\n\r\n                    if(updatedUserInfo.data.status===\"ok\")\r\n                    {\r\n                        dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                        dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                    }\r\n                })()\r\n            }\r\n        }   \r\n    },[])\r\n\r\n    return (\r\n        <div className=\"wishlist-container\">\r\n            <h2>{userWishlist.length} {userWishlist.length===1?\"item\":\"items\"} in Wishlist</h2>\r\n            <div className=\"products-card-grid\">\r\n                {\r\n                    JSON.stringify(userWishlist)!==JSON.stringify([]) \r\n                    ? (\r\n                        userWishlist.map(productdetails => (\r\n                            <WishlistProductCard key={productdetails._id} productdetails={productdetails} />\r\n                        ))\r\n                    )\r\n                    : (\r\n                        <div className=\"empty-wishlist-message-container\">\r\n                            <Lottie options={heartObj}\r\n                                height={150}\r\n                                width={150}\r\n                                isStopped={false}\r\n                                isPaused={false}\r\n                            />\r\n                            <h2>Your wishlist is empty 🙃</h2>\r\n                            <Link to=\"/shop\">\r\n                                <button className=\" solid-primary-btn\">Go to shop</button>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Wishlist }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\AuthenticationPages\\Login.jsx",["203"],[],"import React, { useState, useEffect } from \"react\"\r\nimport jwt_decode from \"jwt-decode\"\r\nimport \"./UserAuth.css\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { \r\n    useToast, \r\n    useUserLogin, \r\n    useWishlist,\r\n    useCart,\r\n    useOrders\r\n} from \"../../index\"\r\n\r\nfunction Login()\r\n{\r\n    const { setUserLoggedIn }       = useUserLogin()\r\n    const { showToast }             = useToast()\r\n    const { dispatchUserWishlist }  = useWishlist()\r\n    const { dispatchUserCart }      = useCart()\r\n    const { dispatchUserOrders }    = useOrders()\r\n\r\n    const [userEmail    , setUserEmail]    = useState('')\r\n    const [userPassword , setUserPassword] = useState('')\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n            }\r\n            else\r\n            {\r\n                (async function getUpdatedWishlistAndCart()\r\n                {\r\n                    let updatedUserInfo = await axios.get(\r\n                    \"https://bookztron-server.vercel.app/api/user\",\r\n                    {\r\n                        headers:\r\n                        {\r\n                        'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    })\r\n\r\n                    if(updatedUserInfo.data.status===\"ok\")\r\n                    {\r\n                        dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                        dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                        dispatchUserOrders({type: \"UPDATE_USER_ORDERS\",payload: updatedUserInfo.data.user.orders})\r\n                    }\r\n                })()\r\n            }\r\n        }   \r\n    },[])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    function loginUser(event)\r\n    {\r\n        event.preventDefault();\r\n        axios.post(\r\n            \"https://bookztron-server.vercel.app/api/login\",\r\n            {\r\n                userEmail,\r\n                userPassword\r\n            }\r\n        )\r\n        .then(res => {\r\n            \r\n            if(res.data.user)\r\n            {\r\n                localStorage.setItem('token',res.data.user)\r\n                showToast(\"success\",\"\",\"Logged in successfully\")\r\n                setUserLoggedIn(true)\r\n                dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: res.data.wishlist})\r\n                dispatchUserCart({type: \"UPDATE_USER_CART\",payload: res.data.cart})\r\n                dispatchUserOrders({type: \"UPDATE_USER_ORDERS\",payload: res.data.orders})\r\n                navigate('/shop')\r\n            }\r\n            else\r\n            {\r\n                throw new Error(\"Error in user login\")\r\n            }\r\n\r\n        })\r\n        .catch(err=>{\r\n            showToast(\"error\",\"\",\"Error logging in user. Please try again\")\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-auth-content-container\">\r\n            <form onSubmit={loginUser} className=\"user-auth-form\">\r\n                <h2>Login</h2>\r\n                \r\n                <div className=\"user-auth-input-container\">\r\n                    <label htmlFor=\"user-auth-input-email\"><h4>Email address</h4></label>\r\n                    <input \r\n                        id=\"user-auth-input-email\" \r\n                        className=\"user-auth-form-input\" \r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        value={userEmail}\r\n                        onChange={(event)=>setUserEmail(event.target.value)}\r\n                        required/>\r\n                </div>\r\n\r\n                <div className=\"user-auth-input-container\">\r\n                    <label htmlFor=\"user-auth-input-password\"><h4>Password</h4></label>\r\n                    <input \r\n                        id=\"user-auth-input-password\" \r\n                        className=\"user-auth-form-input\" \r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        value={userPassword}\r\n                        onChange={(event)=>setUserPassword(event.target.value)}\r\n                        required/>\r\n                </div>\r\n\r\n                <div className=\"user-options-container\">\r\n                    <div className=\"remember-me-container\">\r\n                        <input type=\"checkbox\" id=\"remember-me\"/>\r\n                        <label htmlFor=\"remember-me\">Remember Me</label>\r\n                    </div>\r\n                    <div>\r\n                        <Link to=\"#\" className=\"links-with-blue-underline\" id=\"forgot-password\">\r\n                            Forgot Password?\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"solid-success-btn form-user-auth-submit-btn\">Login</button>\r\n\r\n                <div className=\"new-user-container\">\r\n                    <Link to=\"/signup\" className=\"links-with-blue-underline\" id=\"new-user-link\">\r\n                        Create new account &nbsp; \r\n                    </Link>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Login }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\ProductPage\\ProductPage.jsx",["204","205","206"],[],"import { useEffect } from \"react\";\r\nimport \"./ProductPage.css\"\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useToast, useWishlist, useCart } from \"../../index\"\r\n\r\nfunction ProductPage()\r\n{\r\n    const navigate = useNavigate()\r\n\r\n    const { dispatchUserWishlist } = useWishlist()\r\n    const { dispatchUserCart }     = useCart()\r\n    const { showToast } = useToast()\r\n    const { id } = useParams()\r\n    const productDetailsOnStorage = localStorage.getItem(`${id}`)\r\n    const productdetails = JSON.parse(productDetailsOnStorage)\r\n    const {\r\n        _id,\r\n        bookName,\r\n        author,\r\n        originalPrice,\r\n        discountedPrice,\r\n        discountPercent,\r\n        imgSrc, \r\n        imgAlt,\r\n        badgeText, \r\n        outOfStock,\r\n        rating, \r\n        description\r\n    } = productdetails\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n            }\r\n            else\r\n            {\r\n                (async function getUpdatedWishlistAndCart()\r\n                {\r\n                    let updatedUserInfo = await axios.get(\r\n                    \"https://bookztron-server.vercel.app/api/user\",\r\n                    {\r\n                        headers:\r\n                        {\r\n                        'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    })\r\n\r\n                    if(updatedUserInfo.data.status===\"ok\")\r\n                    {\r\n                        dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                        dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                    }\r\n                })()\r\n            }\r\n        }   \r\n    },[])\r\n\r\n    async function addItemToWishlist()\r\n    {\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            \r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n                showToast(\"warning\",\"\",\"Kindly Login\")\r\n                navigate('/login')\r\n            }\r\n            else\r\n            {\r\n                let wishlistUpdateResponse = await axios.patch(\r\n                    \"https://bookztron-server.vercel.app/api/wishlist\",\r\n                    {\r\n                        productdetails\r\n                    },\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    }\r\n                )\r\n        \r\n                if(wishlistUpdateResponse.data.status===\"ok\")\r\n                {\r\n                    dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: wishlistUpdateResponse.data.user.wishlist})\r\n                    showToast(\"success\",\"\",\"Item successfully added to wishlist\")\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            showToast(\"warning\",\"\",\"Kindly Login\")\r\n        } \r\n    }\r\n\r\n    async function addItemToCart()\r\n    {\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            \r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n                showToast(\"warning\",\"\",\"Kindly Login\")\r\n                navigate('/login')\r\n            }\r\n            else\r\n            {\r\n                let cartUpdateResponse = await axios.patch(\r\n                    \"https://bookztron-server.vercel.app/api/cart\",\r\n                    {\r\n                        productdetails\r\n                    },\r\n                    {\r\n                        headers:\r\n                        {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                        }\r\n                    }\r\n                )\r\n                if(cartUpdateResponse.data.status===\"ok\")\r\n                {\r\n                    dispatchUserCart({type: \"UPDATE_USER_CART\",payload: cartUpdateResponse.data.user.cart})\r\n                    showToast(\"success\",\"\",\"Item successfully added to cart\")\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            showToast(\"warning\",\"\",\"Kindly Login\")\r\n        } \r\n    }\r\n\r\n    return (\r\n        <div className=\"product-page-container\">\r\n            <div className=\"product-page-item\">\r\n                <img className=\"bookcover-image\" src={imgSrc} alt={imgAlt}></img>\r\n                <div className=\"item-details\">\r\n                    <h2>{bookName}</h2>\r\n                    <hr></hr>\r\n                    <p><b>Author : </b> &nbsp;&nbsp; <span>{author}</span> </p>\r\n                    <p className=\"item-description\"><b>Description : </b> &nbsp;&nbsp; <span>{description}</span> </p>\r\n                    <p className=\"item-rating\"><b>Rating : </b> &nbsp;&nbsp; <span>{rating}</span> </p>\r\n                    <h3 className=\"item-price-details\">Rs. {discountedPrice} &nbsp;&nbsp;<del>Rs. {originalPrice}</del> &nbsp;&nbsp;\r\n                        <span className=\"discount-on-item\">({discountPercent}% off)</span>\r\n                    </h3>\r\n                    {\r\n                        outOfStock === true && (\r\n                            <p className=\"out-of-stock-text\">Item is currently out of stock</p>\r\n                        )\r\n                    }\r\n                    {\r\n                        outOfStock === true \r\n                        ? (\r\n                            <div className=\"item-buttons\">\r\n                                <button className=\"item-notify-me-btn solid-primary-btn\">Notify Me</button>\r\n                            </div>\r\n                        )\r\n                        : (\r\n                            <div className=\"item-buttons\">\r\n                                <button\r\n                                    onClick={(event)=>{\r\n                                        event.preventDefault();\r\n                                        addItemToWishlist()\r\n                                    }}  \r\n                                    className=\"solid-primary-btn\">\r\n                                        Add to wishlist\r\n                                </button>\r\n                                <button \r\n                                    onClick={()=>{\r\n                                        addItemToCart()\r\n                                    }}\r\n                                    className=\"solid-warning-btn\">\r\n                                        Add to cart\r\n                                </button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { ProductPage }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\Pages\\Orders\\Orders.jsx",["207"],[],"import \"./Orders.css\"\r\nimport { useEffect } from \"react\";\r\nimport jwt_decode from \"jwt-decode\"\r\nimport axios from \"axios\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport { \r\n    ProductOrderCard,\r\n    useWishlist,\r\n    useCart,\r\n    useOrders\r\n} from \"../../index\"\r\nimport Lottie from 'react-lottie';\r\nimport GuyWithBookLottie from \"../../Assets/Icons/guy_with_book.json\"\r\n\r\nfunction Orders()\r\n{\r\n    const { userWishlist, dispatchUserWishlist } = useWishlist()\r\n    const { userCart, dispatchUserCart } = useCart()\r\n    const { userOrders, dispatchUserOrders } = useOrders()\r\n    let guyWithBookObj = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData : GuyWithBookLottie,\r\n        rendererSettings: {\r\n          preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    }\r\n    const { pathname } = useLocation();\r\n  \r\n    useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    useEffect(()=>{\r\n        const token=localStorage.getItem('token')\r\n\r\n        if(token)\r\n        {\r\n            const user = jwt_decode(token)\r\n            if(!user)\r\n            {\r\n                localStorage.removeItem('token')\r\n            }\r\n            else\r\n            {\r\n                if(userOrders.length===0)\r\n                {\r\n                    (async function getUpdatedWishlistAndCart()\r\n                    {\r\n                        let updatedUserInfo = await axios.get(\r\n                        \"https://bookztron-server.vercel.app/api/user\",\r\n                        {\r\n                            headers:\r\n                            {\r\n                            'x-access-token': localStorage.getItem('token'),\r\n                            }\r\n                        })\r\n                        if(updatedUserInfo.data.status===\"ok\")\r\n                        {\r\n                            dispatchUserOrders({type: \"UPDATE_USER_ORDERS\",payload: updatedUserInfo.data.user.orders})                   \r\n                            if(userWishlist.length===0)\r\n                            {\r\n                                dispatchUserWishlist({type: \"UPDATE_USER_WISHLIST\",payload: updatedUserInfo.data.user.wishlist})\r\n                                \r\n                            }\r\n                            if(userCart.length===0)\r\n                            {\r\n                                dispatchUserCart({type: \"UPDATE_USER_CART\",payload: updatedUserInfo.data.user.cart})\r\n                            }\r\n                        }\r\n                    })()\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            dispatchUserOrders({type: \"UPDATE_USER_ORDERS\",payload: []})\r\n        }   \r\n    },[])\r\n\r\n    return (\r\n        <div className=\"orders-content-container\">\r\n            <h2>{userOrders.length} {userOrders===1?\"item\":\"items\"} in your Orders</h2>\r\n            {\r\n                userOrders.length === 0\r\n                ? (\r\n                    <div className=\"no-orders-message-container\">\r\n                            <Lottie options={guyWithBookObj}\r\n                                height={350}\r\n                                width={350}\r\n                                isStopped={false}\r\n                                isPaused={false}\r\n                            />\r\n                            <h2>You have not placed any orders</h2>\r\n                            <Link to=\"/cart\">\r\n                                <button className=\" solid-primary-btn\">Go to cart</button>\r\n                            </Link>\r\n                    </div>\r\n                )\r\n                : (\r\n                    <div className=\"orders-container\">\r\n                        {\r\n                            userOrders.map( (productDetails, index)=>    \r\n                                <ProductOrderCard key={index} productDetails={productDetails}/>\r\n                            )\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Orders }","C:\\Users\\pradh\\Desktop\\devrev\\TheBookCrafter.com\\src\\UtilityFunctions\\loadRazorpayScript.js",[],[],{"ruleId":"208","severity":1,"message":"209","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":19},{"ruleId":"208","severity":1,"message":"212","line":2,"column":21,"nodeType":"210","messageId":"211","endLine":2,"endColumn":36},{"ruleId":"208","severity":1,"message":"213","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":13},{"ruleId":"208","severity":1,"message":"214","line":23,"column":11,"nodeType":"210","messageId":"211","endLine":23,"endColumn":23},{"ruleId":"208","severity":1,"message":"215","line":24,"column":11,"nodeType":"210","messageId":"211","endLine":24,"endColumn":31},{"ruleId":"208","severity":1,"message":"216","line":25,"column":11,"nodeType":"210","messageId":"211","endLine":25,"endColumn":27},{"ruleId":"208","severity":1,"message":"217","line":8,"column":3,"nodeType":"210","messageId":"211","endLine":8,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":45,"column":5,"nodeType":"220","endLine":45,"endColumn":55,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":34,"column":7,"nodeType":"220","endLine":34,"endColumn":9,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":55,"column":7,"nodeType":"220","endLine":55,"endColumn":30,"suggestions":"225"},{"ruleId":"208","severity":1,"message":"226","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":14},{"ruleId":"208","severity":1,"message":"227","line":26,"column":9,"nodeType":"210","messageId":"211","endLine":26,"endColumn":19},{"ruleId":"218","severity":1,"message":"228","line":60,"column":7,"nodeType":"220","endLine":60,"endColumn":24,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"230","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":18},{"ruleId":"208","severity":1,"message":"231","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":18},{"ruleId":"208","severity":1,"message":"232","line":11,"column":11,"nodeType":"210","messageId":"211","endLine":11,"endColumn":19},{"ruleId":"208","severity":1,"message":"233","line":13,"column":13,"nodeType":"210","messageId":"211","endLine":13,"endColumn":22},{"ruleId":"208","severity":1,"message":"234","line":18,"column":9,"nodeType":"210","messageId":"211","endLine":18,"endColumn":22},{"ruleId":"208","severity":1,"message":"235","line":19,"column":9,"nodeType":"210","messageId":"211","endLine":19,"endColumn":24},{"ruleId":"208","severity":1,"message":"236","line":20,"column":9,"nodeType":"210","messageId":"211","endLine":20,"endColumn":24},{"ruleId":"208","severity":1,"message":"227","line":24,"column":9,"nodeType":"210","messageId":"211","endLine":24,"endColumn":19},{"ruleId":"208","severity":1,"message":"237","line":29,"column":30,"nodeType":"210","messageId":"211","endLine":29,"endColumn":48},{"ruleId":"218","severity":1,"message":"238","line":66,"column":7,"nodeType":"220","endLine":66,"endColumn":9,"suggestions":"239"},{"ruleId":"218","severity":1,"message":"240","line":99,"column":7,"nodeType":"220","endLine":99,"endColumn":9,"suggestions":"241"},{"ruleId":"218","severity":1,"message":"240","line":68,"column":5,"nodeType":"220","endLine":68,"endColumn":7,"suggestions":"242"},{"ruleId":"218","severity":1,"message":"243","line":67,"column":7,"nodeType":"220","endLine":67,"endColumn":9,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"245","line":4,"column":16,"nodeType":"210","messageId":"211","endLine":4,"endColumn":27},{"ruleId":"218","severity":1,"message":"240","line":60,"column":7,"nodeType":"220","endLine":60,"endColumn":9,"suggestions":"246"},{"ruleId":"218","severity":1,"message":"247","line":57,"column":7,"nodeType":"220","endLine":57,"endColumn":9,"suggestions":"248"},{"ruleId":"208","severity":1,"message":"249","line":20,"column":9,"nodeType":"210","messageId":"211","endLine":20,"endColumn":12},{"ruleId":"208","severity":1,"message":"250","line":28,"column":9,"nodeType":"210","messageId":"211","endLine":28,"endColumn":18},{"ruleId":"218","severity":1,"message":"240","line":65,"column":7,"nodeType":"220","endLine":65,"endColumn":9,"suggestions":"251"},{"ruleId":"218","severity":1,"message":"252","line":79,"column":7,"nodeType":"220","endLine":79,"endColumn":9,"suggestions":"253"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useLayoutEffect' is defined but never used.","'axios' is defined but never used.","'userLoggedIn' is assigned a value but never used.","'dispatchUserWishlist' is assigned a value but never used.","'dispatchUserCart' is assigned a value but never used.","'productsAvailableList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'sortPriceHighToLow' and 'sortPriceLowToHigh'. Either include them or remove the dependency array.","ArrayExpression",["254"],"React Hook useEffect has a missing dependency: 'setUserLoggedIn'. Either include it or remove the dependency array.",["255"],"React Hook useEffect has missing dependencies: 'dispatchUserCart', 'dispatchUserOrders', 'dispatchUserWishlist', and 'setUserLoggedIn'. Either include them or remove the dependency array.",["256"],"'Link' is defined but never used.","'outOfStock' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_id', 'dispatchUserCart', and 'showToast'. Either include them or remove the dependency array.",["257"],"'useState' is defined but never used.","'jwt_decode' is defined but never used.","'navigate' is assigned a value but never used.","'showToast' is assigned a value but never used.","'originalPrice' is assigned a value but never used.","'discountedPrice' is assigned a value but never used.","'discountPercent' is assigned a value but never used.","'setProductsPerPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatchSortedProductsList', 'productFilterOptions', and 'productsAvailableList'. Either include them or remove the dependency array.",["258"],"React Hook useEffect has missing dependencies: 'dispatchUserCart' and 'dispatchUserWishlist'. Either include them or remove the dependency array.",["259"],["260"],"React Hook useEffect has missing dependencies: 'dispatchUserCart', 'dispatchUserWishlist', 'userCart.length', and 'userWishlist.length'. Either include them or remove the dependency array.",["261"],"'useNavigate' is defined but never used.",["262"],"React Hook useEffect has missing dependencies: 'dispatchUserCart', 'dispatchUserOrders', and 'dispatchUserWishlist'. Either include them or remove the dependency array.",["263"],"'_id' is assigned a value but never used.","'badgeText' is assigned a value but never used.",["264"],"React Hook useEffect has missing dependencies: 'dispatchUserCart', 'dispatchUserOrders', 'dispatchUserWishlist', 'userCart.length', 'userOrders.length', and 'userWishlist.length'. Either include them or remove the dependency array.",["265"],{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"276","fix":"278"},{"desc":"279","fix":"280"},{"desc":"276","fix":"281"},{"desc":"282","fix":"283"},{"desc":"276","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [productFilterOptions, dispatchSortedProductsList, sortPriceLowToHigh, sortPriceHighToLow]",{"range":"287","text":"288"},"Update the dependencies array to be: [setUserLoggedIn]",{"range":"289","text":"290"},"Update the dependencies array to be: [userWishlist, userCart, setUserLoggedIn, dispatchUserWishlist, dispatchUserCart, dispatchUserOrders]",{"range":"291","text":"292"},"Update the dependencies array to be: [_id, dispatchUserCart, productQuantity, showToast]",{"range":"293","text":"294"},"Update the dependencies array to be: [dispatchSortedProductsList, productFilterOptions, productsAvailableList]",{"range":"295","text":"296"},"Update the dependencies array to be: [dispatchUserCart, dispatchUserWishlist]",{"range":"297","text":"298"},{"range":"299","text":"298"},"Update the dependencies array to be: [dispatchUserCart, dispatchUserWishlist, userCart.length, userWishlist.length]",{"range":"300","text":"301"},{"range":"302","text":"298"},"Update the dependencies array to be: [dispatchUserCart, dispatchUserOrders, dispatchUserWishlist]",{"range":"303","text":"304"},{"range":"305","text":"298"},"Update the dependencies array to be: [dispatchUserCart, dispatchUserOrders, dispatchUserWishlist, userCart.length, userOrders.length, userWishlist.length]",{"range":"306","text":"307"},[1701,1751],"[productFilterOptions, dispatchSortedProductsList, sortPriceLowToHigh, sortPriceHighToLow]",[1125,1127],"[setUserLoggedIn]",[1834,1857],"[userWishlist, userCart, setUserLoggedIn, dispatchUserWishlist, dispatchUserCart, dispatchUserOrders]",[1774,1791],"[_id, dispatchUserCart, productQuantity, showToast]",[2238,2240],"[dispatchSortedProductsList, productFilterOptions, productsAvailableList]",[3172,3174],"[dispatchUserCart, dispatchUserWishlist]",[2088,2090],[2165,2167],"[dispatchUserCart, dispatchUserWishlist, userCart.length, userWishlist.length]",[1856,1858],[1928,1930],"[dispatchUserCart, dispatchUserOrders, dispatchUserWishlist]",[2035,2037],[2694,2696],"[dispatchUserCart, dispatchUserOrders, dispatchUserWishlist, userCart.length, userOrders.length, userWishlist.length]"]